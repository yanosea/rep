<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelSending" xml:space="preserve">
    <value>CANCEL SENDING</value>
    <comment>log message for cancel sending</comment>
  </data>
  <data name="CheckUpdates" xml:space="preserve">
    <value>CHECK UPDATES</value>
    <comment>log message for check updates</comment>
  </data>
  <data name="ExecuteUpdate" xml:space="preserve">
    <value>EXECUTE UPDATE</value>
    <comment>log message for execute update</comment>
  </data>
  <data name="FailureAuthenticating" xml:space="preserve">
    <value>FAILED AUTHENTICATING</value>
    <comment>error log message for failure authenticating</comment>
  </data>
  <data name="FailureConnecting" xml:space="preserve">
    <value>FAILED CONNECTING</value>
    <comment>error log message for failure connecting</comment>
  </data>
  <data name="FailureDailyNotPrepared" xml:space="preserve">
    <value>FAILED DAILY IS NOT PREPARED</value>
    <comment>error log message for failure daily not prepared</comment>
  </data>
  <data name="FailureDisconnecting" xml:space="preserve">
    <value>FAILED DISCONNECTING</value>
    <comment>error log message for failure disconnecting</comment>
  </data>
  <data name="FailureGettingCommandLineArguments" xml:space="preserve">
    <value>FAILED GETTING COMMAND LINE ARGUMENTS</value>
    <comment>error log message for failure getting command line arguments</comment>
  </data>
  <data name="FailureGettingThresholdTime" xml:space="preserve">
    <value>FAILED GETTING THRESHOLD TIME</value>
    <comment>error log message for failure getting threshold time</comment>
  </data>
  <data name="FailureGettingTodaysOpeningTime" xml:space="preserve">
    <value>FAILED GETTING TODAY'S OPENING TIME</value>
    <comment>error log message for failure getting today's opening time</comment>
  </data>
  <data name="FailureGitCommand" xml:space="preserve">
    <value>FAILED GIT COMMAND : [ {0} ]</value>
    <comment>error log message for failure git command executing</comment>
  </data>
  <data name="FailureInitializing" xml:space="preserve">
    <value>FAILED INITIALIZING</value>
    <comment>error log message for failure initializing</comment>
  </data>
  <data name="FailureInputtingAbnormalParam" xml:space="preserve">
    <value>FAILED INVALID PARAM INPUT : [ {0} ]</value>
    <comment>error log message for failure inputting abnormal param</comment>
  </data>
  <data name="FailureInputtingAbnormalTime" xml:space="preserve">
    <value>FAILED INVALID TIME INPUT</value>
    <comment>error log message for failure inputting abnormal time</comment>
  </data>
  <data name="FailureNoneOfMonthlyFilesSelected" xml:space="preserve">
    <value>FAILED NONE OF THE MONTHLY FILES ARE SELECTE</value>
    <comment>error log message for failure none of monthly files are selected</comment>
  </data>
  <data name="FailureNoneOfReportSelected" xml:space="preserve">
    <value>FAILED NONE OF THE REPORT ARE SELECTED</value>
    <comment>error log message for failure none of report are selected</comment>
  </data>
  <data name="FailureNoneOfWeeklyFilesSelected" xml:space="preserve">
    <value>FAILED NONE OF THE WEEKLY FILES ARE SELECTE</value>
    <comment>error log message for failure none of weekly files are selected</comment>
  </data>
  <data name="FailureReadingConfigFiles" xml:space="preserve">
    <value>FAILED READING CONFIG FILES</value>
    <comment>error log message for failure reading config files</comment>
  </data>
  <data name="FailureSavingConfig" xml:space="preserve">
    <value>FAILED SAVING CONFIG</value>
    <comment>error log message for failure saving config</comment>
  </data>
  <data name="FailureSending" xml:space="preserve">
    <value>FAILED SENDING</value>
    <comment>error log message for failure sending</comment>
  </data>
  <data name="FailureSendingReport" xml:space="preserve">
    <value>FAILED SENDING REPORTS</value>
    <comment>error log message for failure sending reports</comment>
  </data>
  <data name="FailureSomethingWrongOccured" xml:space="preserve">
    <value>SOMETHING WRONG OCCURED</value>
    <comment>error log message for something wrong</comment>
  </data>
  <data name="SkipTopPageEnable" xml:space="preserve">
    <value>SKIP TOP PAGE ENABLE</value>
    <comment>log message for skip top page</comment>
  </data>
</root>